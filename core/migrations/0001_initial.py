# Generated by Django 5.1 on 2024-09-29 11:37

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=3, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('file_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file_name', models.CharField(max_length=255)),
                ('file_type', models.CharField(max_length=50)),
                ('file_size', models.IntegerField()),
                ('description', models.TextField()),
                ('origin', models.CharField(max_length=255)),
                ('current_location', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('In Transit', 'In Transit'), ('Delivered', 'Delivered'), ('Archived', 'Archived')], default='Pending', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='GradeLevel',
            fields=[
                ('level', models.PositiveIntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(18)])),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(blank=True, max_length=40)),
                ('per_diem', models.DecimalField(decimal_places=2, max_digits=8)),
                ('local_running', models.DecimalField(decimal_places=2, max_digits=8)),
                ('estacode', models.DecimalField(decimal_places=2, max_digits=8)),
                ('assumption_of_duty', models.DecimalField(decimal_places=2, max_digits=8)),
            ],
        ),
        migrations.CreateModel(
            name='PFA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=3, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('name', models.CharField(max_length=50)),
                ('code', models.CharField(max_length=3, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('name', models.CharField(max_length=50)),
                ('code', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('code', models.CharField(max_length=7, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='divisions', to='core.department')),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='OfficialAppointment',
            fields=[
                ('code', models.CharField(max_length=15, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('cadre', models.CharField(choices=[('O', 'OFFICER'), ('E', 'EXECUTIVE'), ('S', 'SECRETARIAL'), ('C', 'CLERICAL'), ('D', 'DRIVER')], max_length=1)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.department')),
                ('grade_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.gradelevel')),
            ],
            options={
                'verbose_name': 'Official Appointment',
                'verbose_name_plural': 'Official Appointments',
            },
        ),
        migrations.CreateModel(
            name='LGA',
            fields=[
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=5, primary_key=True, serialize=False, unique=True)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.state')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('employee_id', models.CharField(db_index=True, max_length=20, unique=True, verbose_name='Employee ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('ippis_number', models.CharField(max_length=8, unique=True, verbose_name='IPPIS Number')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FileTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transfer_date', models.DateTimeField(auto_now_add=True)),
                ('transfer_method', models.CharField(max_length=100)),
                ('transfer_details', models.TextField()),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.file')),
                ('recipient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_files', to='core.user')),
                ('sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_files', to='core.user')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_number', models.CharField(blank=True, max_length=7, null=True, unique=True, verbose_name='File Number')),
                ('nin', models.CharField(blank=True, max_length=11, null=True, unique=True, verbose_name='National Identification Number')),
                ('first_name', models.CharField(max_length=50, verbose_name='First Name')),
                ('middle_name', models.CharField(blank=True, max_length=50, verbose_name='Middle Name')),
                ('surname', models.CharField(max_length=50, verbose_name='Surname')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1, verbose_name='Gender')),
                ('marital_status', models.CharField(blank=True, choices=[('S', 'Single'), ('M', 'Married'), ('D', 'Divorced'), ('W', 'Widowed')], max_length=1, verbose_name='Marital Status')),
                ('phone_number', models.CharField(blank=True, max_length=11, null=True, validators=[django.core.validators.RegexValidator('^(080|081|090|091|070)\\d{8}$')], verbose_name='Phone Number')),
                ('residential_address', models.CharField(blank=True, max_length=150, verbose_name='Residential Address')),
                ('date_of_first_appointment', models.DateField(blank=True, null=True, verbose_name='Date of First Appointment')),
                ('date_of_present_appointment', models.DateField(blank=True, null=True, verbose_name='Date of Present Appointment')),
                ('date_of_confirmation', models.DateField(blank=True, null=True, verbose_name='Date of Confirmation')),
                ('cadre', models.CharField(blank=True, choices=[('O', 'OFFICER'), ('E', 'EXECUTIVE'), ('S', 'SECRETARIAL'), ('C', 'CLERICAL'), ('D', 'DRIVER')], max_length=1, null=True, verbose_name='Cadre')),
                ('current_step', models.PositiveIntegerField(blank=True, null=True, verbose_name='Current Step')),
                ('passport', models.ImageField(blank=True, null=True, upload_to='employee_passports/', verbose_name='Passport Photo')),
                ('last_promotion_date', models.DateField(blank=True, null=True, verbose_name='Last Promotion Date')),
                ('retirement_date', models.DateField(blank=True, null=True, verbose_name='Retirement Date')),
                ('account_type', models.CharField(blank=True, choices=[('S', 'Savings'), ('C', 'Current')], max_length=1, null=True)),
                ('account_number', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^\\d{10}$')])),
                ('pfa_number', models.CharField(blank=True, max_length=12, validators=[django.core.validators.RegexValidator('^\\d{12}$')], verbose_name='PFA PEN')),
                ('full_name_spouse', models.CharField(blank=True, max_length=50, null=True, verbose_name='Spouse Full Name')),
                ('phone_number_spouse', models.CharField(blank=True, max_length=15, null=True, verbose_name='Spouse Phone Number')),
                ('residential_address_spouse', models.CharField(blank=True, max_length=150, null=True, verbose_name='Spouse Residential Address')),
                ('employer_spouse', models.CharField(blank=True, max_length=50, null=True, verbose_name='Spouse Employer')),
                ('child1_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Child 1 Name')),
                ('child1_date_of_birth', models.DateField(blank=True, null=True, verbose_name='Child 1 Date of Birth')),
                ('nok1_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Next of Kin 1 Name')),
                ('nok1_relationship', models.CharField(blank=True, choices=[('SPOUSE', 'Spouse'), ('CHILD', 'Child'), ('PARENT', 'Parent'), ('SIBLING', 'Sibling'), ('OTHER', 'Other')], max_length=50, null=True, verbose_name='Next of Kin 1 Relationship')),
                ('nok1_address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Next of Kin 1 Address')),
                ('nok1_phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Next of Kin 1 Phone Number')),
                ('nok2_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Next of Kin 2 Name')),
                ('nok2_relationship', models.CharField(blank=True, choices=[('SPOUSE', 'Spouse'), ('CHILD', 'Child'), ('PARENT', 'Parent'), ('SIBLING', 'Sibling'), ('OTHER', 'Other')], max_length=50, null=True, verbose_name='Next of Kin 2 Relationship')),
                ('nok2_address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Next of Kin 2 Address')),
                ('nok2_phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Next of Kin 2 Phone Number')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.bank')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.department', verbose_name='Department')),
                ('division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.division', verbose_name='Division')),
                ('current_grade_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.gradelevel', verbose_name='Current Grade Level')),
                ('lga_of_origin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employees_origin', to='core.lga', verbose_name='LGA of Origin')),
                ('lga_of_residence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employees_residence', to='core.lga', verbose_name='LGA of Residence')),
                ('station', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employees_lga_posting', to='core.lga', verbose_name='Station')),
                ('present_appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.officialappointment', verbose_name='Present Appointment')),
                ('pfa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.pfa', verbose_name='Pension Fund Administrator')),
                ('state_of_origin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employees_origin', to='core.state', verbose_name='State of Origin')),
                ('state_of_posting', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employees_posting', to='core.state', verbose_name='State of Posting')),
                ('state_of_residence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employees_residence', to='core.state', verbose_name='State of Residence')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_updates', to='core.user', verbose_name='Updated By')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee_profile', to='core.user')),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
                'ordering': ['surname', 'first_name'],
            },
        ),
        migrations.AddField(
            model_name='state',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.zone'),
        ),
    ]
