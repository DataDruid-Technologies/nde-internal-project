# Generated by Django 5.1.1 on 2024-10-10 19:07

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChangeOfVitalInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_changed', models.CharField(max_length=100)),
                ('old_value', models.CharField(max_length=255)),
                ('new_value', models.CharField(max_length=255)),
                ('change_date', models.DateField()),
                ('reason', models.TextField()),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_vital_info_changes', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vital_info_changes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Change of Vital Information',
                'verbose_name_plural': 'Changes of Vital Information',
            },
        ),
        migrations.CreateModel(
            name='Documentation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_certificate', models.FileField(blank=True, null=True, upload_to='employee_documents/')),
                ('educational_certificates', models.FileField(blank=True, null=True, upload_to='employee_documents/')),
                ('medical_certificate', models.FileField(blank=True, null=True, upload_to='employee_documents/')),
                ('reference_letters', models.FileField(blank=True, null=True, upload_to='employee_documents/')),
                ('other_documents', models.FileField(blank=True, null=True, upload_to='employee_documents/')),
                ('documentation_complete', models.BooleanField(default=False)),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='documentation', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Documentation',
                'verbose_name_plural': 'Documentations',
            },
        ),
        migrations.CreateModel(
            name='EmployeeDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_number', models.CharField(blank=True, max_length=7, null=True, unique=True, verbose_name='File Number')),
                ('nin', models.CharField(blank=True, max_length=11, null=True, unique=True, verbose_name='National Identification Number')),
                ('first_name', models.CharField(max_length=50, verbose_name='First Name')),
                ('middle_name', models.CharField(blank=True, max_length=50, verbose_name='Middle Name')),
                ('surname', models.CharField(max_length=50, verbose_name='Surname')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1, verbose_name='Gender')),
                ('marital_status', models.CharField(blank=True, choices=[('S', 'Single'), ('M', 'Married'), ('D', 'Divorced'), ('W', 'Widowed')], max_length=1, verbose_name='Marital Status')),
                ('phone_number', models.CharField(blank=True, max_length=11, null=True, validators=[django.core.validators.RegexValidator('^(080|081|090|091|070)\\d{8}$')], verbose_name='Phone Number')),
                ('residential_address', models.CharField(blank=True, max_length=150, verbose_name='Residential Address')),
                ('date_of_first_appointment', models.DateField(blank=True, null=True, verbose_name='Date of First Appointment')),
                ('date_of_present_appointment', models.DateField(blank=True, null=True, verbose_name='Date of Present Appointment')),
                ('date_of_confirmation', models.DateField(blank=True, null=True, verbose_name='Date of Confirmation')),
                ('date_of_confirmation_exam', models.DateField(blank=True, null=True, verbose_name='Date When Confirmation Exam was taken')),
                ('cadre', models.CharField(blank=True, choices=[('O', 'OFFICER'), ('E', 'EXECUTIVE'), ('S', 'SECRETARIAL'), ('C', 'CLERICAL'), ('D', 'DRIVER')], max_length=1, null=True, verbose_name='Cadre')),
                ('current_step', models.PositiveIntegerField(blank=True, null=True, verbose_name='Current Step')),
                ('passport', models.ImageField(blank=True, null=True, upload_to='employee_passports/', verbose_name='Passport Photo')),
                ('last_promotion_date', models.DateField(blank=True, null=True, verbose_name='Last Promotion Date')),
                ('retirement_date', models.DateField(blank=True, null=True, verbose_name='Retirement Date')),
                ('account_type', models.CharField(blank=True, choices=[('S', 'Savings'), ('C', 'Current')], max_length=1, null=True)),
                ('account_number', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^\\d{10}$')])),
                ('pfa_number', models.CharField(blank=True, max_length=12, validators=[django.core.validators.RegexValidator('^\\d{12}$')], verbose_name='PFA PEN')),
                ('full_name_spouse', models.CharField(blank=True, max_length=50, null=True, verbose_name='Spouse Full Name')),
                ('phone_number_spouse', models.CharField(blank=True, max_length=15, null=True, verbose_name='Spouse Phone Number')),
                ('residential_address_spouse', models.CharField(blank=True, max_length=150, null=True, verbose_name='Spouse Residential Address')),
                ('employer_spouse', models.CharField(blank=True, max_length=50, null=True, verbose_name='Spouse Employer')),
                ('number_of_children', models.PositiveIntegerField(blank=True, null=True, verbose_name='Number of Children')),
                ('nok1_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Next of Kin 1 Name')),
                ('nok1_relationship', models.CharField(blank=True, choices=[('SPOUSE', 'Spouse'), ('CHILD', 'Child'), ('PARENT', 'Parent'), ('SIBLING', 'Sibling'), ('OTHER', 'Other')], max_length=50, null=True, verbose_name='Next of Kin 1 Relationship')),
                ('nok1_address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Next of Kin 1 Address')),
                ('nok1_phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Next of Kin 1 Phone Number')),
                ('nok2_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Next of Kin 2 Name')),
                ('nok2_relationship', models.CharField(blank=True, choices=[('SPOUSE', 'Spouse'), ('CHILD', 'Child'), ('PARENT', 'Parent'), ('SIBLING', 'Sibling'), ('OTHER', 'Other')], max_length=50, null=True, verbose_name='Next of Kin 2 Relationship')),
                ('nok2_address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Next of Kin 2 Address')),
                ('nok2_phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Next of Kin 2 Phone Number')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.bank')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_creations', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('current_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.department', verbose_name='Department')),
                ('current_grade_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.gradelevel', verbose_name='Current Grade Level')),
                ('currrent_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.division', verbose_name='Division')),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='details', to=settings.AUTH_USER_MODEL, verbose_name='Employee')),
                ('lga_of_origin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employees_origin', to='core.lga', verbose_name='LGA of Origin')),
                ('lga_of_residence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employees_residence', to='core.lga', verbose_name='LGA of Residence')),
                ('pfa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.pfa', verbose_name='Pension Fund Administrator')),
                ('present_appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.officialappointment', verbose_name='Present Appointment')),
                ('state_of_origin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employees_origin', to='core.state', verbose_name='State of Origin')),
                ('state_of_posting', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employees_posting', to='core.state', verbose_name='State of Posting')),
                ('state_of_residence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employees_residence', to='core.state', verbose_name='State of Residence')),
                ('station', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employees_lga_posting', to='core.lga', verbose_name='Station')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_updates', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Employee Detail',
                'verbose_name_plural': 'Employee Details',
            },
        ),
        migrations.CreateModel(
            name='Examination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_type', models.CharField(choices=[('PROMOTION', 'Promotion Exam'), ('CONFIRMATION', 'Confirmation Exam'), ('PROFICIENCY', 'Proficiency Test'), ('OTHER', 'Other')], max_length=20, verbose_name='Examination Type')),
                ('exam_date', models.DateField(verbose_name='Examination Date')),
                ('exam_title', models.CharField(max_length=255, verbose_name='Examination Title')),
                ('result_status', models.CharField(choices=[('PASSED', 'Passed'), ('FAILED', 'Failed'), ('AWAITING', 'Awaiting Result'), ('EXEMPTED', 'Exempted')], default='AWAITING', max_length=20, verbose_name='Result Status')),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Score')),
                ('passing_score', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Passing Score')),
                ('remarks', models.TextField(blank=True, verbose_name='Remarks')),
                ('certificate_issued', models.BooleanField(default=False, verbose_name='Certificate Issued')),
                ('certificate_issue_date', models.DateField(blank=True, null=True, verbose_name='Certificate Issue Date')),
                ('exam_document', models.FileField(blank=True, null=True, upload_to='examination_documents/', verbose_name='Examination Document')),
                ('result_document', models.FileField(blank=True, null=True, upload_to='examination_results/', verbose_name='Result Document')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='examinations', to=settings.AUTH_USER_MODEL, verbose_name='Employee')),
            ],
            options={
                'verbose_name': 'Examination',
                'verbose_name_plural': 'Examinations',
                'ordering': ['-exam_date'],
            },
        ),
        migrations.CreateModel(
            name='IPPISManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ippis_number', models.CharField(max_length=20, unique=True)),
                ('date_enrolled', models.DateField()),
                ('last_updated', models.DateField(auto_now=True)),
                ('salary_step', models.PositiveIntegerField()),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ippis_management', to=settings.AUTH_USER_MODEL)),
                ('salary_grade', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.gradelevel')),
            ],
            options={
                'verbose_name': 'IPPIS Management',
                'verbose_name_plural': 'IPPIS Management',
            },
        ),
        migrations.CreateModel(
            name='LeaveRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_type', models.CharField(choices=[('annual', 'Annual Leave'), ('sick', 'Sick Leave'), ('maternity', 'Maternity Leave'), ('paternity', 'Paternity Leave'), ('study', 'Study Leave'), ('compassionate', 'Compassionate Leave')], max_length=20, verbose_name='Leave Type')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('reason', models.TextField(verbose_name='Reason')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_leaves', to=settings.AUTH_USER_MODEL, verbose_name='Approved By')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_requests', to=settings.AUTH_USER_MODEL, verbose_name='Employee')),
            ],
            options={
                'verbose_name': 'Leave Request',
                'verbose_name_plural': 'Leave Requests',
            },
        ),
        migrations.CreateModel(
            name='PerformanceReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_date', models.DateField(verbose_name='Review Date')),
                ('performance_score', models.DecimalField(decimal_places=2, max_digits=3, verbose_name='Performance Score')),
                ('comments', models.TextField(verbose_name='Comments')),
                ('goals_set', models.TextField(verbose_name='Goals Set')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_reviews', to=settings.AUTH_USER_MODEL, verbose_name='Employee')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conducted_reviews', to=settings.AUTH_USER_MODEL, verbose_name='Reviewer')),
            ],
            options={
                'verbose_name': 'Performance Review',
                'verbose_name_plural': 'Performance Reviews',
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_step', models.PositiveIntegerField(verbose_name='From Step')),
                ('to_step', models.PositiveIntegerField(verbose_name='To Step')),
                ('promotion_date', models.DateField(verbose_name='Promotion Date')),
                ('effective_date', models.DateField(verbose_name='Effective Date')),
                ('remarks', models.TextField(blank=True, verbose_name='Remarks')),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_promotions', to=settings.AUTH_USER_MODEL, verbose_name='Approved By')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promotions', to=settings.AUTH_USER_MODEL, verbose_name='Employee')),
                ('from_grade', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='promotions_from', to='core.gradelevel', verbose_name='From Grade')),
                ('to_grade', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='promotions_to', to='core.gradelevel', verbose_name='To Grade')),
            ],
            options={
                'verbose_name': 'Promotion',
                'verbose_name_plural': 'Promotions',
            },
        ),
        migrations.CreateModel(
            name='RecordOfService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('APPOINTMENT', 'Appointment'), ('PROMOTION', 'Promotion'), ('TRANSFER', 'Transfer'), ('DISCIPLINARY_ACTION', 'Disciplinary Action'), ('AWARD', 'Award'), ('OTHER', 'Other')], max_length=100)),
                ('event_date', models.DateField()),
                ('description', models.TextField()),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Record of Service',
                'verbose_name_plural': 'Records of Service',
                'ordering': ['-event_date'],
            },
        ),
        migrations.CreateModel(
            name='Repatriation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repatriation_date', models.DateField()),
                ('reason', models.TextField()),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_repatriations', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repatriations', to=settings.AUTH_USER_MODEL)),
                ('from_state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='repatriations_from', to='core.state')),
                ('to_state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='repatriations_to', to='core.state')),
            ],
            options={
                'verbose_name': 'Repatriation',
                'verbose_name_plural': 'Repatriations',
            },
        ),
        migrations.CreateModel(
            name='Retirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('retirement_date', models.DateField()),
                ('reason', models.CharField(choices=[('AGE', 'Age'), ('YEARS_OF_SERVICE', 'Years of Service'), ('VOLUNTARY', 'Voluntary'), ('MEDICAL', 'Medical'), ('OTHER', 'Other')], max_length=100)),
                ('additional_info', models.TextField(blank=True)),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='retirement', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Retirement',
                'verbose_name_plural': 'Retirements',
            },
        ),
        migrations.CreateModel(
            name='StaffVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verification_date', models.DateField()),
                ('is_verified', models.BooleanField(default=False)),
                ('remarks', models.TextField(blank=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verifications', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conducted_verifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Staff Verification',
                'verbose_name_plural': 'Staff Verifications',
            },
        ),
        migrations.CreateModel(
            name='TemporaryAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(verbose_name='Start Date')),
                ('end_date', models.DateTimeField(verbose_name='End Date')),
                ('reason', models.TextField(verbose_name='Reason')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='temporary_accesses', to=settings.AUTH_USER_MODEL, verbose_name='Employee')),
                ('granted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='granted_accesses', to=settings.AUTH_USER_MODEL, verbose_name='Granted By')),
                ('permissions', models.ManyToManyField(blank=True, to='auth.permission', verbose_name='Temporary Permissions')),
            ],
            options={
                'verbose_name': 'Temporary Access',
                'verbose_name_plural': 'Temporary Accesses',
            },
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Training Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('trainer', models.CharField(max_length=100, verbose_name='Trainer')),
                ('participants', models.ManyToManyField(related_name='trainings', to=settings.AUTH_USER_MODEL, verbose_name='Participants')),
            ],
            options={
                'verbose_name': 'Training',
                'verbose_name_plural': 'Trainings',
            },
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transfer_date', models.DateField(verbose_name='Transfer Date')),
                ('reason', models.TextField(verbose_name='Reason for Transfer')),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_transfers', to=settings.AUTH_USER_MODEL, verbose_name='Approved By')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers', to=settings.AUTH_USER_MODEL, verbose_name='Employee')),
                ('from_department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers_from', to='core.department', verbose_name='From Department')),
                ('to_department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers_to', to='core.department', verbose_name='To Department')),
            ],
            options={
                'verbose_name': 'Transfer',
                'verbose_name_plural': 'Transfers',
            },
        ),
    ]
